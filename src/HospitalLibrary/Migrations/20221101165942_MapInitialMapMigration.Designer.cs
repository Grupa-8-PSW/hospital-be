// <auto-generated />
using HospitalLibrary.Settings;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace HospitalLibrary.Migrations
{
    [DbContext(typeof(HospitalDbContext))]
    [Migration("20221101165942_MapInitialMapMigration")]
    partial class MapInitialMapMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("HospitalLibrary.GraphicalEditor.Model.Building", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Buildings");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "One"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Too"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Tre"
                        });
                });

            modelBuilder.Entity("HospitalLibrary.GraphicalEditor.Model.Floor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BuildingId")
                        .HasColumnType("integer");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("BuildingId");

                    b.ToTable("Floors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BuildingId = 1,
                            Number = "One"
                        },
                        new
                        {
                            Id = 2,
                            BuildingId = 1,
                            Number = "Too"
                        },
                        new
                        {
                            Id = 3,
                            BuildingId = 1,
                            Number = "Tre"
                        },
                        new
                        {
                            Id = 4,
                            BuildingId = 2,
                            Number = "Noo"
                        });
                });

            modelBuilder.Entity("HospitalLibrary.GraphicalEditor.Model.Map.MapBuilding", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BuildingId")
                        .HasColumnType("integer");

                    b.Property<string>("color")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("height")
                        .HasColumnType("integer");

                    b.Property<int>("width")
                        .HasColumnType("integer");

                    b.Property<int>("x")
                        .HasColumnType("integer");

                    b.Property<int>("y")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("BuildingId")
                        .IsUnique();

                    b.ToTable("MapBuildings");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BuildingId = 1,
                            color = "gray",
                            height = 150,
                            width = 450,
                            x = 100,
                            y = 100
                        },
                        new
                        {
                            Id = 2,
                            BuildingId = 2,
                            color = "gray",
                            height = 450,
                            width = 150,
                            x = 600,
                            y = 100
                        },
                        new
                        {
                            Id = 3,
                            BuildingId = 3,
                            color = "gray",
                            height = 130,
                            width = 400,
                            x = 400,
                            y = 600
                        });
                });

            modelBuilder.Entity("HospitalLibrary.GraphicalEditor.Model.Map.MapFloor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("FloorId")
                        .HasColumnType("integer");

                    b.Property<string>("color")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("height")
                        .HasColumnType("integer");

                    b.Property<int>("width")
                        .HasColumnType("integer");

                    b.Property<int>("x")
                        .HasColumnType("integer");

                    b.Property<int>("y")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("FloorId")
                        .IsUnique();

                    b.ToTable("MapFloors");
                });

            modelBuilder.Entity("HospitalLibrary.GraphicalEditor.Model.Map.MapRoom", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("RoomId")
                        .HasColumnType("integer");

                    b.Property<string>("color")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("height")
                        .HasColumnType("integer");

                    b.Property<int>("width")
                        .HasColumnType("integer");

                    b.Property<int>("x")
                        .HasColumnType("integer");

                    b.Property<int>("y")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("RoomId")
                        .IsUnique();

                    b.ToTable("MapRooms");
                });

            modelBuilder.Entity("HospitalLibrary.GraphicalEditor.Model.Room", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("FloorId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("FloorId");

                    b.ToTable("Rooms");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FloorId = 1,
                            Name = "One",
                            Number = "101A"
                        },
                        new
                        {
                            Id = 2,
                            FloorId = 2,
                            Name = "Too",
                            Number = "204"
                        },
                        new
                        {
                            Id = 3,
                            FloorId = 3,
                            Name = "Tre",
                            Number = "305B"
                        });
                });

            modelBuilder.Entity("HospitalLibrary.GraphicalEditor.Model.Floor", b =>
                {
                    b.HasOne("HospitalLibrary.GraphicalEditor.Model.Building", "Building")
                        .WithMany("Floors")
                        .HasForeignKey("BuildingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Building");
                });

            modelBuilder.Entity("HospitalLibrary.GraphicalEditor.Model.Map.MapBuilding", b =>
                {
                    b.HasOne("HospitalLibrary.GraphicalEditor.Model.Building", "Building")
                        .WithOne("Map")
                        .HasForeignKey("HospitalLibrary.GraphicalEditor.Model.Map.MapBuilding", "BuildingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Building");
                });

            modelBuilder.Entity("HospitalLibrary.GraphicalEditor.Model.Map.MapFloor", b =>
                {
                    b.HasOne("HospitalLibrary.GraphicalEditor.Model.Floor", "Floor")
                        .WithOne("Map")
                        .HasForeignKey("HospitalLibrary.GraphicalEditor.Model.Map.MapFloor", "FloorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Floor");
                });

            modelBuilder.Entity("HospitalLibrary.GraphicalEditor.Model.Map.MapRoom", b =>
                {
                    b.HasOne("HospitalLibrary.GraphicalEditor.Model.Room", "Room")
                        .WithOne("Map")
                        .HasForeignKey("HospitalLibrary.GraphicalEditor.Model.Map.MapRoom", "RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Room");
                });

            modelBuilder.Entity("HospitalLibrary.GraphicalEditor.Model.Room", b =>
                {
                    b.HasOne("HospitalLibrary.GraphicalEditor.Model.Floor", "Floor")
                        .WithMany("Rooms")
                        .HasForeignKey("FloorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Floor");
                });

            modelBuilder.Entity("HospitalLibrary.GraphicalEditor.Model.Building", b =>
                {
                    b.Navigation("Floors");

                    b.Navigation("Map")
                        .IsRequired();
                });

            modelBuilder.Entity("HospitalLibrary.GraphicalEditor.Model.Floor", b =>
                {
                    b.Navigation("Map")
                        .IsRequired();

                    b.Navigation("Rooms");
                });

            modelBuilder.Entity("HospitalLibrary.GraphicalEditor.Model.Room", b =>
                {
                    b.Navigation("Map")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
