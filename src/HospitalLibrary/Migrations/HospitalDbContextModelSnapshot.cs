// <auto-generated />
using System;
using HospitalLibrary.Settings;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace HospitalLibrary.Settings
{
    [DbContext(typeof(HospitalDbContext))]
    partial class HospitalDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("HospitalLibrary.Core.Model.Feedback", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("CreationDate")
                        .HasColumnType("date");

                    b.Property<bool>("IsAnonymous")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPublic")
                        .HasColumnType("boolean");

                    b.Property<int>("PatientId")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("PatientId");

                    b.ToTable("Feedbacks");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreationDate = new DateOnly(2022, 10, 24),
                            IsAnonymous = true,
                            IsPublic = true,
                            PatientId = 1,
                            Status = 0,
                            Text = "Bolnica je dobra"
                        },
                        new
                        {
                            Id = 2,
                            CreationDate = new DateOnly(2022, 10, 24),
                            IsAnonymous = false,
                            IsPublic = true,
                            PatientId = 2,
                            Status = 0,
                            Text = "Bolnica je losa"
                        },
                        new
                        {
                            Id = 3,
                            CreationDate = new DateOnly(2022, 10, 24),
                            IsAnonymous = false,
                            IsPublic = true,
                            PatientId = 3,
                            Status = 1,
                            Text = "Bolnica je odlicna"
                        },
                        new
                        {
                            Id = 4,
                            CreationDate = new DateOnly(2022, 10, 24),
                            IsAnonymous = true,
                            IsPublic = true,
                            PatientId = 4,
                            Status = 0,
                            Text = "Bolnica je solidna"
                        });
                });

            modelBuilder.Entity("HospitalLibrary.Core.Model.Patient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Patients");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FirstName = "Pera",
                            LastName = "Peric"
                        },
                        new
                        {
                            Id = 2,
                            FirstName = "Marko",
                            LastName = "Markovic"
                        },
                        new
                        {
                            Id = 3,
                            FirstName = "Dusan",
                            LastName = "Baljinac"
                        },
                        new
                        {
                            Id = 4,
                            FirstName = "Slobodan",
                            LastName = "Radulovic"
                        });
                });

            modelBuilder.Entity("HospitalLibrary.Core.Model.Feedback", b =>
                {
                    b.HasOne("HospitalLibrary.Core.Model.Patient", "Patient")
                        .WithMany("Feedbacks")
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("HospitalLibrary.Core.Model.Patient", b =>
                {
                    b.Navigation("Feedbacks");
                });
#pragma warning restore 612, 618
        }
    }
}
